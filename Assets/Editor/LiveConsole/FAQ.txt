Live Console
============

- How to get support:

    Send an email to 

        ciela.spike@gmail.com

    I'll answer your question as soon as possible.

- How to open the window:

    After you download the asset, click 'Window' menu, then click 'Live Console' to open this tool.

- How to get quick help:

    In the context menu (right click window's tab or click the upper right corner),
    click "Help" menu item, then the quick help will be displayed.

- How to search the console logs:

    Type in the filter bar. If you want to go back to full context, select a log entry, click cancel button on the right or simply press ESC.

- How to use custom tag:

    Use standard unity log with a header like 'Debug.LogError("[<tag>]Some Message")'.

- How to color your log:

    Log like 'Debug.Log("[<tag>:<color-code>]Some Message")' or 'Debug.Log("[:<color-code>]Some Message")'.
    * Turn off all color by clicking "Color" button on the toolbar.
    
    Color Codes:

    g : Green
    b : Blue
    c : Cyan
    y : yellow
    o : Orange
    r : Red
    m : Magenta

- How to use stack trace:

    Select a log, then its call stack will be shown below.
    If a file name is available, double click one of these stack frame will open the code file.
    * See original unity output by clicking "Plain Text" button on the message bar.

- How to adjust message font size:

    On message bar, click 'A' button to increase font size or 'a' button to decrease font size.

- How to reset Total Compiling Time:

    In context menu, click 'Reset Compile Time' menu item.

- How to change appearances of logs by your own logic:

	You need to add a hook class to the editor.
	
		1. Inside a folder named 'Editor'(or its subfolders), create a new C# script.
		2. using CielaSpike.Unity.LiveConsole;
		3. Create a class inherits LiveConsoleHook, which likes:

			namespace MyGame {
				class MyConsoleHook : LiveConsoleHook {

				}
			}

		4. Add LiveConsoleHook attribute, which makes LiveConsole be able to find your hook class.

			[assembly: LiveConsoleHook(typeof(MyGame.MyConsoleHook))]
			namespace MyGame {
			
			...

			* You should put it outside the namespace because it's an assembly attribute.

		5. Inside the hook class, override hook methods to hook specific event.
		   See code reference document for more details.

		6. If you want to enable the hook class on some condition, override 'IsEnabled' method.
		   See code reference document for more details.

- Hook class is not properly loaded?

	Right click live console's tab, select reload hooks. If it still not work, check if the
	LiveConsoleHook attribute is properly attached.